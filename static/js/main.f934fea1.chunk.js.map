{"version":3,"sources":["AppStyles.js","Components/CardStyles.js","Components/Card.jsx","Components/ProjectsStyles.js","Components/Projects.js","App.jsx","indexStyles.js","index.js","Assets/Icons/discord-logo.svg","Assets/Icons/npm.svg","Assets/Icons/powercord.svg","Assets/Icons sync /^/.*/.svg$","Assets/Icons/calendar.svg","Assets/Icons/cloud-download.svg","Assets/Icons/git_branch.svg","Assets/Icons/github_badge.svg","Assets/Icons/home.svg","Assets/Icons/star-o.svg","Assets/Icons/users.svg"],"names":["AppHeaderTitle","styled","div","AppHeaderContainer","AppContainer","AppHeader","ExternalItem","span","CenterSpan","CardContainer","li","CardTitleContainer","CardTitle","CardTitleAnchor","a","SVG","img","header","CardDescription","CardStatsContainer","CardLanguageContainer","language","CardLanguageSymbol","color","StatsContainer","Card","title","description","link","icon","stats","src","require","alt","href","target","rel","text","map","i","index","key","TagsContainer","CardsContainer","FadeIn","Tags","toggled","FooterText","tags","NPMSVG","name","tooltip","DiscordSVG","PowercordSVG","Projects","visits","history","useHistory","useState","URLSearchParams","location","search","get","filter","setFilter","useEffect","push","filtered","projects","p","tag","version","toString","splice","length","onClick","wrapperTag","delay","role","aria-label","join","extItems","item","App","setVisits","fetch","res","json","out","value","fetchVisits","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById","module","exports","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve"],"mappings":"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","file":"static/js/main.f934fea1.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const AppHeaderTitle = styled.div`\r\n    font-size: 40px;\r\n    font-family: 'Kaushan Script', cursive;\r\n`;\r\n\r\nexport const AppHeaderContainer = styled.div`\r\n    margin: 25px;\r\n`;\r\n\r\nexport const AppContainer = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nexport const AppHeader = styled.div`\r\n    background-color: #23272a;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: calc(10px + 2vmin);\r\n    color: white;\r\n    overflow: auto;\r\n    -ms-overflow-style: none;\r\n    scrollbar-color: transparent transparent;\r\n    margin-bottom: 25px;\r\n    box-shadow: 0px 2px 10px 0px black;\r\n`;\r\n\r\nexport const ExternalItem = styled.span`\r\n    margin: 0px 10px;\r\n    font-size: 20px;\r\n    font-family: 'Kaushan Script', cursive;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CenterSpan = styled.span`\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const CardContainer = styled.li`\r\n    font-family: 'Karla', sans-serif;\r\n    border: 1px solid #373c3e;\r\n    border-radius: 6px;\r\n    background: #181a1b;\r\n    padding: 16px;\r\n    font-size: 14px;\r\n    line-height: 1.5;\r\n    color: #aba499;\r\n    margin: 5px;\r\n    min-width: min(565.8px, 30vw);\r\n    width: 90vw;\r\n    max-width: 473px;\r\n    min-height: max(\r\n        135px,\r\n        1%\r\n    ); // TODO: Properly set card heights to align with lowest in row\r\n`;\r\n\r\nexport const CardTitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const CardTitle = styled.div`\r\n    font-weight: 600;\r\n    color: #0366d6;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const CardTitleAnchor = styled.a`\r\n    text-decoration: none;\r\n    color: inherit;\r\n`;\r\n\r\nexport const SVG = styled.img`\r\n    filter: brightness(0) saturate(100%) invert(88%) sepia(0%) saturate(0%)\r\n        hue-rotate(34deg) brightness(95%) contrast(90%);\r\n    margin-right: ${({ header }) => (header ? '8px' : '3px')};\r\n    width: 16px;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const CardDescription = styled.div`\r\n    font-size: 12px;\r\n    margin-bottom: 16px;\r\n    margin-top: 8px;\r\n    text-align: left;\r\n`;\r\n\r\nexport const CardStatsContainer = styled.div`\r\n    font-size: 12px;\r\n    display: flex;\r\n`;\r\n\r\nexport const CardLanguageContainer = styled.div`\r\n    ${({ language }) => (language ? '' : 'display: none')};\r\n    margin-right: 16px;\r\n`;\r\n\r\nexport const CardLanguageSymbol = styled.span`\r\n    width: 12px;\r\n    height: 12px;\r\n    border-radius: 100%;\r\n    background-color: ${({ color }) => color || ''};\r\n    display: inline-block;\r\n    top: 3px;\r\n    position: relative;\r\n    margin-right: 6px;\r\n`;\r\n\r\nexport const StatsContainer = styled.div`\r\n    align-items: center;\r\n    margin-right: 16px;\r\n`;\r\n","/* eslint-disable import/no-dynamic-require */\r\n/* eslint-disable global-require */\r\nimport React from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    CardContainer,\r\n    CardTitleContainer,\r\n    SVG,\r\n    CardTitle,\r\n    CardTitleAnchor,\r\n    CardDescription,\r\n    CardStatsContainer,\r\n    CardLanguageContainer,\r\n    CardLanguageSymbol,\r\n    CenterSpan,\r\n    StatsContainer,\r\n} from './CardStyles';\r\n\r\nconst Card = ({\r\n    title = '',\r\n    description = '',\r\n    link = '',\r\n    icon = '',\r\n    language = '',\r\n    stats = [],\r\n}) => (\r\n    <CardContainer>\r\n        <CardTitleContainer>\r\n            <SVG\r\n                header\r\n                src={require(`../Assets/Icons/${icon}.svg`)}\r\n                alt={title}\r\n            />\r\n            <CardTitle>\r\n                <CardTitleAnchor\r\n                    href={link}\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                >\r\n                    {title}\r\n                </CardTitleAnchor>\r\n            </CardTitle>\r\n        </CardTitleContainer>\r\n        <CardDescription>{description}</CardDescription>\r\n        <CardStatsContainer>\r\n            <CardLanguageContainer language={language}>\r\n                <CardLanguageSymbol color={language.color} />\r\n                <CenterSpan>{language.text}</CenterSpan>\r\n            </CardLanguageContainer>\r\n            {stats.map((i, index) => (\r\n                <Tooltip title={i.alt}>\r\n                    <StatsContainer key={`${title}-stat-${index}`}>\r\n                        <SVG\r\n                            src={require(`../Assets/Icons/${i.icon}.svg`)}\r\n                            alt={i.alt}\r\n                        />\r\n                        <CenterSpan>{i.text}</CenterSpan>\r\n                    </StatsContainer>\r\n                </Tooltip>\r\n            ))}\r\n        </CardStatsContainer>\r\n    </CardContainer>\r\n);\r\n\r\nCard.propTypes = {\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    link: PropTypes.string,\r\n    icon: PropTypes.string,\r\n    language: PropTypes.string,\r\n    stats: PropTypes.arrayOf(Object),\r\n};\r\n\r\nexport default Card;\r\n","import FadeIn from 'react-fade-in';\r\nimport styled from 'styled-components';\r\n\r\nexport const TagsContainer = styled.div`\r\n    justify-content: center;\r\n    display: flex;\r\n`;\r\n\r\nexport const CardsContainer = styled(FadeIn)`\r\n    margin-bottom: 20px;\r\n    display: grid;\r\n    max-width: 1200px;\r\n    grid-template-columns: repeat(auto-fill, minmax(calc(10% + 7.5rem), 1fr));\r\n    grid-template-columns: repeat(auto-fill, minmax(min(473px, 100%), 1fr));\r\n    list-style: none;\r\n    padding: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    justify-items: center;\r\n`;\r\n\r\nexport const Tags = styled.div`\r\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial,\r\n        sans-serif, Apple Color Emoji, Segoe UI Emoji;\r\n    margin: 10px 0 20px 0;\r\n    font-size: 14px;\r\n    line-height: 1.5;\r\n`;\r\n\r\nexport const SVG = styled.img`\r\n    filter: brightness(0) saturate(100%)\r\n        ${({ toggled }) =>\r\n            toggled\r\n                ? 'invert(100%) sepia(0%) saturate(7500%) hue-rotate(302deg) brightness(117%) contrast(102%)'\r\n                : 'invert(56%) sepia(0%) saturate(38%) hue-rotate(166deg) brightness(89%) contrast(88%);'};\r\n    width: 24px;\r\n    vertical-align: middle;\r\n    margin: 0 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const FooterText = styled.div`\r\n    margin: 20px 0 15px 0;\r\n    color: #aba499;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport FadeIn from 'react-fade-in';\r\n\r\nimport Card from './Card';\r\nimport {\r\n    TagsContainer,\r\n    Tags,\r\n    CardsContainer,\r\n    SVG,\r\n    FooterText,\r\n} from './ProjectsStyles';\r\n\r\nimport projects from '../Assets/Data/projects';\r\nimport NPMSVG from '../Assets/Icons/npm.svg';\r\nimport DiscordSVG from '../Assets/Icons/discord-logo.svg';\r\nimport PowercordSVG from '../Assets/Icons/powercord.svg';\r\n\r\nconst tags = [\r\n    {\r\n        icon: NPMSVG,\r\n        name: 'npm',\r\n        tooltip: 'npm',\r\n    },\r\n    {\r\n        icon: DiscordSVG,\r\n        name: 'discord',\r\n        tooltip: 'Discord',\r\n    },\r\n    {\r\n        icon: PowercordSVG,\r\n        name: 'powercord',\r\n        tooltip: 'Powercord',\r\n    },\r\n];\r\n\r\nconst Projects = ({ visits }) => {\r\n    const history = useHistory();\r\n\r\n    const [filter, setFilter] = useState(\r\n        new URLSearchParams(history.location.search).get('tag')\r\n    );\r\n\r\n    useEffect(() => {\r\n        history.push(filter ? `/?tag=${filter}` : '');\r\n    }, [history, filter]);\r\n\r\n    const filtered = projects.filter(p => !filter || p.tag === filter);\r\n\r\n    const version = [...visits.toString()];\r\n    version.splice(version.length - 2, 0, '.');\r\n    version.splice(version.length - 1, 0, '.');\r\n\r\n    return (\r\n        <>\r\n            <TagsContainer>\r\n                <Tags>\r\n                    {tags.map(tag => (\r\n                        <Tooltip title={`Filter: ${tag.tooltip}`}>\r\n                            <SVG\r\n                                src={tag.icon}\r\n                                alt={tag.name}\r\n                                key={tag.name}\r\n                                toggled={filter === tag.name}\r\n                                onClick={() => {\r\n                                    if (filter === tag.name) setFilter(null);\r\n                                    else setFilter(tag.name);\r\n                                }}\r\n                            />\r\n                        </Tooltip>\r\n                    ))}\r\n                </Tags>\r\n            </TagsContainer>\r\n            <CardsContainer wrapperTag='ul' key={filter} delay={100}>\r\n                {filtered.map(\r\n                    (\r\n                        { title, description, link, icon, language, stats },\r\n                        index\r\n                    ) => (\r\n                        <Card\r\n                            key={`project-${index}`}\r\n                            title={title}\r\n                            description={description}\r\n                            link={link}\r\n                            icon={icon}\r\n                            language={language}\r\n                            stats={stats}\r\n                        />\r\n                    )\r\n                )}\r\n            </CardsContainer>\r\n            <FadeIn key={filtered.length} delay={filtered.length * 100 + 100}>\r\n                <FooterText>\r\n                    Made with{' '}\r\n                    <span role='img' aria-label='heart'>\r\n                        ❤️\r\n                    </span>{' '}\r\n                    in React &bull; v{version.join('')}\r\n                </FooterText>\r\n            </FadeIn>\r\n        </>\r\n    );\r\n};\r\n\r\nProjects.propTypes = {\r\n    visits: Number,\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    AppContainer,\r\n    AppHeader,\r\n    AppHeaderContainer,\r\n    AppHeaderTitle,\r\n    ExternalItem,\r\n} from './AppStyles';\r\n\r\nimport Projects from './Components/Projects';\r\n\r\nconst external = [\r\n    ['https://github.com/lorencerri', 'GitHub'],\r\n    ['https://twitter.com/lorencerri', 'Twitter'],\r\n];\r\n\r\nconst VISITS_API = 'https://api.countapi.xyz/hit/lorencerri.github.io/visits';\r\n\r\nconst extItems = external.map(item => (\r\n    <ExternalItem>\r\n        <a href={item[0]} target='_blank' rel='noopener noreferrer'>\r\n            {item[1]}\r\n        </a>\r\n    </ExternalItem>\r\n));\r\n\r\nexport const App = () => {\r\n    const [visits, setVisits] = useState(100);\r\n\r\n    useEffect(() => {\r\n        const fetchVisits = async () => {\r\n            const res = await fetch(VISITS_API);\r\n            const out = await res.json();\r\n            if (out?.value) setVisits(out.value);\r\n        };\r\n        fetchVisits();\r\n    }, []);\r\n\r\n    return (\r\n        <AppContainer>\r\n            <AppHeader>\r\n                <AppHeaderContainer>\r\n                    <AppHeaderTitle>Loren Cerri</AppHeaderTitle>\r\n                    {extItems}\r\n                </AppHeaderContainer>\r\n            </AppHeader>\r\n            <Projects visits={visits} />\r\n        </AppContainer>\r\n    );\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n    body {\r\n        margin: 0;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\r\n            'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\r\n            'Helvetica Neue', sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        background-color: #282c34;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n\r\n    ::-moz-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { App } from './App';\r\nimport { GlobalStyle } from './indexStyles';\r\n\r\nimport 'antd/dist/antd.dark.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <GlobalStyle />\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/discord-logo.f8389ca1.svg\";","module.exports = __webpack_public_path__ + \"static/media/npm.9a16895f.svg\";","module.exports = __webpack_public_path__ + \"static/media/powercord.c068dc3d.svg\";","var map = {\n\t\"./calendar.svg\": 84,\n\t\"./cloud-download.svg\": 85,\n\t\"./discord-logo.svg\": 40,\n\t\"./git_branch.svg\": 86,\n\t\"./github_badge.svg\": 87,\n\t\"./home.svg\": 88,\n\t\"./npm.svg\": 41,\n\t\"./powercord.svg\": 42,\n\t\"./star-o.svg\": 89,\n\t\"./users.svg\": 90\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 53;","module.exports = __webpack_public_path__ + \"static/media/calendar.6bfff213.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-download.e807bf72.svg\";","module.exports = __webpack_public_path__ + \"static/media/git_branch.b551d0fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_badge.a1bbd715.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.393f3192.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-o.d4a4e4d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/users.9e9005f6.svg\";"],"sourceRoot":""}