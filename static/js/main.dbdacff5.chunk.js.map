{"version":3,"sources":["Assets/Icons/npm-brands.svg","Assets/Icons/discord-brands.svg","Assets/Icons/powercord.svg","AppStyles.js","Components/CardStyles.js","Components/Card.jsx","Components/ProjectsStyles.js","Components/Projects.js","App.jsx","indexStyles.js","index.js"],"names":["module","exports","AppHeaderTitle","styled","div","AppHeaderContainer","AppContainer","AppHeader","ExternalItem","span","CenterSpan","CardContainer","li","borderColor","CardTitleContainer","CardTitle","CardTitleAnchor","a","SVG","img","header","CardDescription","CardStatsContainer","CardLanguageContainer","language","CardLanguageSymbol","color","StatsContainer","MemoizedCard","memo","title","description","link","icon","stats","useState","state","setState","useEffect","needToFetch","filter","item","text","i","fetch","url","res","json","cur","path","get","length","fetchStats","cardStats","map","index","alt","key","className","href","target","rel","TagsContainer","CardsContainer","ul","Tags","toggled","tags","NPMSVG","name","tooltip","DiscordSVG","PowercordSVG","Projects","history","useHistory","URLSearchParams","location","search","setFilter","push","filtered","projects","p","Array","isArray","tag","includes","isNotDefault","src","onClick","delay","extItems","App","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbdacff5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/npm-brands.d36a9952.svg\";","module.exports = __webpack_public_path__ + \"static/media/discord-brands.33a5aa61.svg\";","module.exports = __webpack_public_path__ + \"static/media/powercord.c068dc3d.svg\";","import styled from 'styled-components';\r\n\r\nexport const AppHeaderTitle = styled.div`\r\n    font-size: 40px;\r\n    font-family: 'Kaushan Script', cursive;\r\n`;\r\n\r\nexport const AppHeaderContainer = styled.div`\r\n    margin: 25px;\r\n`;\r\n\r\nexport const AppContainer = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nexport const AppHeader = styled.div`\r\n    background-color: #23272a;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: calc(10px + 2vmin);\r\n    color: white;\r\n    overflow: auto;\r\n    -ms-overflow-style: none;\r\n    scrollbar-color: transparent transparent;\r\n    margin-bottom: 25px;\r\n    box-shadow: 0px 2px 10px 0px black;\r\n`;\r\n\r\nexport const ExternalItem = styled.span`\r\n    margin: 0px 10px;\r\n    font-size: 20px;\r\n    font-family: 'Kaushan Script', cursive;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CenterSpan = styled.span`\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const CardContainer = styled.li`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-family: 'Karla', sans-serif;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    background: #181a1b;\r\n    padding: 16px;\r\n    font-size: 14px;\r\n    line-height: 1.5;\r\n    color: #aba499;\r\n    margin: 5px;\r\n    min-width: min(565.8px, 30vw);\r\n    width: 90vw;\r\n    max-width: 473px;\r\n    border-color: ${({ borderColor }) => borderColor || '#373c3e'};\r\n`;\r\n\r\nexport const CardTitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const CardTitle = styled.div`\r\n    font-weight: 600;\r\n    color: #0366d6;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const CardTitleAnchor = styled.a`\r\n    text-decoration: none;\r\n    color: inherit;\r\n`;\r\n\r\nexport const SVG = styled.img`\r\n    filter: brightness(0) saturate(100%) invert(88%) sepia(0%) saturate(0%)\r\n        hue-rotate(34deg) brightness(95%) contrast(90%);\r\n    margin-right: ${({ header }) => (header ? '8px' : '4px')};\r\n    height: 16px;\r\n    width: 16px;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const CardDescription = styled.div`\r\n    font-size: 12px;\r\n    margin-bottom: 16px;\r\n    margin-top: 8px;\r\n    text-align: left;\r\n`;\r\n\r\nexport const CardStatsContainer = styled.div`\r\n    margin-top: auto;\r\n    font-size: 12px;\r\n    display: flex;\r\n`;\r\n\r\nexport const CardLanguageContainer = styled.div`\r\n    ${({ language }) => (language ? '' : 'display: none')};\r\n    margin-right: 16px;\r\n`;\r\n\r\nexport const CardLanguageSymbol = styled.span`\r\n    width: 12px;\r\n    height: 12px;\r\n    border-radius: 100%;\r\n    background-color: ${({ color }) => color || ''};\r\n    display: inline-block;\r\n    top: 3px;\r\n    position: relative;\r\n    margin-right: 6px;\r\n`;\r\n\r\nexport const StatsContainer = styled.div`\r\n    align-items: center;\r\n    margin-right: 16px;\r\n`;\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { get } from 'lodash';\r\nimport { Tooltip } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    CardContainer,\r\n    CardTitleContainer,\r\n    SVG,\r\n    CardTitle,\r\n    CardTitleAnchor,\r\n    CardDescription,\r\n    CardStatsContainer,\r\n    CardLanguageContainer,\r\n    CardLanguageSymbol,\r\n    CenterSpan,\r\n    StatsContainer,\r\n} from './CardStyles';\r\n\r\n// TODO: Add jumbotron-style preview when clicking on cards\r\n// TODO: Add animation when hovering over cards\r\n\r\nconst Card = ({\r\n    title = '',\r\n    description = '',\r\n    link = '',\r\n    icon = '',\r\n    language = '',\r\n    stats = [],\r\n    borderColor = '',\r\n}) => {\r\n    const [state, setState] = useState({});\r\n\r\n    useEffect(() => {\r\n        // TODO: Don't call every render\r\n        const fetchStats = async () => {\r\n            const needToFetch = stats.filter(\r\n                item => typeof item.text === 'object'\r\n            );\r\n\r\n            for (let i = 0; i < needToFetch.length; i += 1) {\r\n                const item = needToFetch[i].text;\r\n\r\n                const res = await fetch(item.url);\r\n                const json = await res.json();\r\n\r\n                setState(cur => ({\r\n                    ...cur,\r\n                    [item.url + item.path]: get(json, item.path),\r\n                }));\r\n            }\r\n        };\r\n\r\n        fetchStats();\r\n    }, [stats]);\r\n\r\n    const cardStats = stats.map((i, index) => (\r\n        <Tooltip title={i.alt} key={`${title}-stat-${index}`}>\r\n            <StatsContainer>\r\n                <SVG className={i.icon} alt={i.alt} />\r\n                <CenterSpan>\r\n                    {typeof i.text === 'object'\r\n                        ? state[i.text.url + i.text.path] || 'Loading...'\r\n                        : i.text}\r\n                </CenterSpan>\r\n            </StatsContainer>\r\n        </Tooltip>\r\n    ));\r\n\r\n    return (\r\n        <CardContainer borderColor={borderColor}>\r\n            <CardTitleContainer>\r\n                <SVG header className={icon} alt={title} />\r\n                <CardTitle>\r\n                    <CardTitleAnchor\r\n                        href={link}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                    >\r\n                        {title}\r\n                    </CardTitleAnchor>\r\n                </CardTitle>\r\n            </CardTitleContainer>\r\n            <CardDescription>{description}</CardDescription>\r\n            <CardStatsContainer>\r\n                <CardLanguageContainer language={language}>\r\n                    <CardLanguageSymbol color={language.color} />\r\n                    <CenterSpan>{language.text}</CenterSpan>\r\n                </CardLanguageContainer>\r\n                {cardStats}\r\n            </CardStatsContainer>\r\n        </CardContainer>\r\n    );\r\n};\r\n\r\nCard.propTypes = {\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    link: PropTypes.string,\r\n    icon: PropTypes.string,\r\n    language: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n    stats: PropTypes.arrayOf(Object),\r\n    borderColor: PropTypes.oneOfType([undefined, PropTypes.string]),\r\n};\r\n\r\nexport const MemoizedCard = memo(Card);\r\n","import styled from 'styled-components';\r\n\r\nexport const TagsContainer = styled.div`\r\n    justify-content: center;\r\n    display: flex;\r\n`;\r\n\r\nexport const CardsContainer = styled.ul`\r\n    margin-bottom: 20px;\r\n    display: grid;\r\n    max-width: 1200px;\r\n    grid-template-columns: repeat(auto-fill, minmax(calc(10% + 7.5rem), 1fr));\r\n    grid-template-columns: repeat(auto-fill, minmax(min(473px, 100%), 1fr));\r\n    list-style: none;\r\n    padding: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    justify-items: center;\r\n`;\r\n\r\nexport const Tags = styled.div`\r\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial,\r\n        sans-serif, Apple Color Emoji, Segoe UI Emoji;\r\n    margin: 10px 0 20px 0;\r\n    font-size: 14px;\r\n    line-height: 1.5;\r\n`;\r\n\r\nexport const SVG = styled.img`\r\n    filter: brightness(0) saturate(100%)\r\n        ${({ toggled }) =>\r\n            toggled\r\n                ? 'invert(100%) sepia(0%) saturate(7500%) hue-rotate(302deg) brightness(117%) contrast(102%)'\r\n                : 'invert(56%) sepia(0%) saturate(38%) hue-rotate(166deg) brightness(89%) contrast(88%);'};\r\n    width: 24px;\r\n    vertical-align: middle;\r\n    margin: 0 5px;\r\n    cursor: pointer;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport FadeIn from 'react-fade-in';\r\n\r\nimport { MemoizedCard } from './Card';\r\nimport { TagsContainer, Tags, CardsContainer, SVG } from './ProjectsStyles';\r\n\r\nimport projects from '../Assets/Data/projects';\r\nimport NPMSVG from '../Assets/Icons/npm-brands.svg';\r\nimport DiscordSVG from '../Assets/Icons/discord-brands.svg';\r\nimport PowercordSVG from '../Assets/Icons/powercord.svg';\r\n\r\nconst tags = [\r\n    {\r\n        icon: NPMSVG,\r\n        name: 'npm',\r\n        tooltip: 'npm',\r\n    },\r\n    {\r\n        icon: DiscordSVG,\r\n        name: 'discord',\r\n        tooltip: 'Discord',\r\n    },\r\n    {\r\n        icon: PowercordSVG,\r\n        name: 'powercord',\r\n        tooltip: 'Powercord',\r\n    },\r\n];\r\n\r\nconst Projects = () => {\r\n    const history = useHistory();\r\n\r\n    const [filter, setFilter] = useState(\r\n        new URLSearchParams(history.location.search).get('tag')\r\n    );\r\n\r\n    useEffect(() => {\r\n        history.push(filter ? `/?tag=${filter}` : '');\r\n    }, [history, filter]);\r\n\r\n    const filtered = projects\r\n        .filter(\r\n            p =>\r\n                !filter ||\r\n                (Array.isArray(p.tag)\r\n                    ? p.tag.includes(filter)\r\n                    : p.tag === filter)\r\n        )\r\n        .filter(p => (!filter ? !p.isNotDefault : true));\r\n\r\n    return (\r\n        <>\r\n            <TagsContainer>\r\n                <Tags>\r\n                    {tags.map((tag, index) => (\r\n                        <Tooltip\r\n                            title={`Filter: ${tag.tooltip}`}\r\n                            key={`tag-${index}`}\r\n                        >\r\n                            {/* TODO: Use font-awesome package */}\r\n                            <SVG\r\n                                src={tag.icon}\r\n                                alt={tag.name}\r\n                                key={tag.name}\r\n                                toggled={filter === tag.name}\r\n                                onClick={() => {\r\n                                    if (filter === tag.name) setFilter(null);\r\n                                    else setFilter(tag.name);\r\n                                }}\r\n                            />\r\n                        </Tooltip>\r\n                    ))}\r\n                </Tags>\r\n            </TagsContainer>\r\n            <FadeIn key={filter} delay={100}>\r\n                <CardsContainer>\r\n                    {filtered.map(\r\n                        (\r\n                            {\r\n                                title,\r\n                                description,\r\n                                link,\r\n                                icon,\r\n                                language,\r\n                                stats,\r\n                                borderColor,\r\n                            },\r\n                            index\r\n                        ) => (\r\n                            <MemoizedCard\r\n                                key={`project-${index}`}\r\n                                title={title}\r\n                                description={description}\r\n                                link={link}\r\n                                icon={icon}\r\n                                language={language}\r\n                                stats={stats}\r\n                                borderColor={borderColor}\r\n                            />\r\n                        )\r\n                    )}\r\n                </CardsContainer>\r\n            </FadeIn>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\n\r\nimport {\r\n    AppContainer,\r\n    AppHeader,\r\n    AppHeaderContainer,\r\n    AppHeaderTitle,\r\n    ExternalItem,\r\n} from './AppStyles';\r\n\r\nimport Projects from './Components/Projects';\r\n\r\nconst external = [\r\n    ['https://github.com/lorencerri', 'GitHub'],\r\n    ['https://twitter.com/lorencerri', 'Twitter'],\r\n];\r\n\r\nconst extItems = external.map((item, index) => (\r\n    <ExternalItem key={`external-${index}`}>\r\n        <a href={item[0]} target='_blank' rel='noopener noreferrer'>\r\n            {item[1]}\r\n        </a>\r\n    </ExternalItem>\r\n));\r\n\r\nexport const App = () => (\r\n    <AppContainer>\r\n        <AppHeader>\r\n            <AppHeaderContainer>\r\n                <AppHeaderTitle>Loren Cerri</AppHeaderTitle>\r\n                {extItems}\r\n            </AppHeaderContainer>\r\n        </AppHeader>\r\n        <Projects />\r\n    </AppContainer>\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    body {\r\n        margin: 0;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\r\n            'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\r\n            'Helvetica Neue', sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        background-color: #282c34;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n\r\n    ::-moz-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { App } from './App';\r\nimport { GlobalStyle } from './indexStyles';\r\n\r\n// TODO: Remove dependency on antd's stylesheet\r\nimport 'antd/dist/antd.dark.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <GlobalStyle />\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}